{"version":3,"sources":["webpack:///./src/views/Login.vue?e160","webpack:///src/views/Login.vue","webpack:///./src/views/Login.vue?5da6","webpack:///./src/views/Login.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","to","_v","method","on","submit","$event","preventDefault","submitForm","for","dirty","username","errors","_s","_e","directives","name","rawName","value","expression","modifiers","trim","id","autocorrect","autocapitalize","autocomplete","blur","handleBlur","change","$$selectedVal","Array","prototype","filter","call","target","options","o","selected","map","val","_value","multiple","_l","Object","keys","keychain","user","key","domProps","aria-label","TOOLTIP_LOGIN_ENCRYPTION_KEY","class","mb-4","error","type","$forceUpdate","input","composing","disabled","submitDisabled","isLoading","query","redirect","authority","staticRenderFns","Loginvue_type_script_lang_js_","data","$route","auth","messages","computed","get","$store","state","persistentForms","login","set","commit","current","created","loadKeychain","methods","objectSpread","vuex_esm","resetForm","usernames","keys_default","length","_usernames","slicedToArray","_this","encryptedKeys","main_default","a","decrypt","Buffer","decryptError","buff","console","log","utils","toString","concat","then","$router","push","catch","err","views_Loginvue_type_script_lang_js_","component","componentNormalizer","__webpack_exports__"],"mappings":"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","file":"js/login.b43d4bd7.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('Center',[_c('router-link',{staticClass:\"d-inline-block my-2 no-decoration\",attrs:{\"to\":\"/\"}},[_c('span',{staticClass:\"logo iconfont icon-steemconnect\"}),_c('h4',{staticClass:\"m-0\"},[_vm._v(\"steemconnect\")])]),_c('div',{staticClass:\"width-full p-4 mb-2\"},[_c('form',{staticClass:\"text-left\",attrs:{\"method\":\"post\"},on:{\"submit\":function($event){$event.preventDefault();return _vm.submitForm($event)}}},[_c('label',{attrs:{\"for\":\"username\"}},[_vm._v(\"Steem username\")]),(_vm.dirty.username && !!_vm.errors.username)?_c('div',{staticClass:\"error mb-2\"},[_vm._v(\"\\n        \"+_vm._s(_vm.errors.username)+\"\\n      \")]):_vm._e(),_c('select',{directives:[{name:\"model\",rawName:\"v-model.trim\",value:(_vm.username),expression:\"username\",modifiers:{\"trim\":true}}],staticClass:\"form-select input-lg input-block mb-2\",attrs:{\"id\":\"username\",\"autocorrect\":\"off\",\"autocapitalize\":\"none\",\"autocomplete\":\"username\"},on:{\"blur\":function($event){return _vm.handleBlur('username')},\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.username=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},_vm._l((Object.keys(_vm.keychain)),function(user){return _c('option',{key:user,domProps:{\"value\":user}},[_vm._v(\"\\n          \"+_vm._s(user)+\"\\n        \")])}),0),_c('label',{attrs:{\"for\":\"password\"}},[_vm._v(\"\\n        Keychain password\\n        \"),_c('span',{staticClass:\"tooltipped tooltipped-n tooltipped-multiline\",attrs:{\"aria-label\":_vm.TOOLTIP_LOGIN_ENCRYPTION_KEY}},[_c('span',{staticClass:\"iconfont icon-info\"})])]),(_vm.dirty.key && !!_vm.errors.key)?_c('div',{staticClass:\"error mb-2\"},[_vm._v(\"\\n        \"+_vm._s(_vm.errors.key)+\"\\n      \")]):_vm._e(),_c('input',{directives:[{name:\"model\",rawName:\"v-model.trim\",value:(_vm.key),expression:\"key\",modifiers:{\"trim\":true}}],staticClass:\"form-control input-lg input-block mb-2\",class:{ 'mb-4': !_vm.error },attrs:{\"id\":\"password\",\"type\":\"password\",\"autocorrect\":\"off\",\"autocapitalize\":\"none\",\"autocomplete\":\"current-password\"},domProps:{\"value\":(_vm.key)},on:{\"blur\":[function($event){return _vm.handleBlur('key')},function($event){return _vm.$forceUpdate()}],\"input\":function($event){if($event.target.composing){ return; }_vm.key=$event.target.value.trim()}}}),(!!_vm.error)?_c('div',{staticClass:\"error mb-4\"},[_vm._v(_vm._s(_vm.error))]):_vm._e(),_c('button',{staticClass:\"btn btn-large btn-blue input-block mb-2\",attrs:{\"disabled\":_vm.submitDisabled || _vm.isLoading,\"type\":\"submit\"}},[_vm._v(\"\\n        Log in\\n      \")]),_c('router-link',{staticClass:\"btn btn-large input-block text-center mb-2\",attrs:{\"to\":{ name: 'import', query: { redirect: _vm.redirect, authority: _vm.authority } }}},[_vm._v(\"\\n        Import account\\n      \")])],1)]),_c('Footer')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <Center>\n    <router-link to=\"/\" class=\"d-inline-block my-2 no-decoration\">\n      <span class=\"logo iconfont icon-steemconnect\" />\n      <h4 class=\"m-0\">steemconnect</h4>\n    </router-link>\n    <div class=\"width-full p-4 mb-2\">\n      <form @submit.prevent=\"submitForm\" method=\"post\" class=\"text-left\">\n        <label for=\"username\">Steem username</label>\n        <div v-if=\"dirty.username && !!errors.username\" class=\"error mb-2\">\n          {{ errors.username }}\n        </div>\n        <select\n          id=\"username\"\n          v-model.trim=\"username\"\n          class=\"form-select input-lg input-block mb-2\"\n          autocorrect=\"off\"\n          autocapitalize=\"none\"\n          autocomplete=\"username\"\n          @blur=\"handleBlur('username')\"\n        >\n          <option v-for=\"user in Object.keys(keychain)\" :key=\"user\" :value=\"user\">\n            {{ user }}\n          </option>\n        </select>\n        <label for=\"password\">\n          Keychain password\n          <span\n            class=\"tooltipped tooltipped-n tooltipped-multiline\"\n            :aria-label=\"TOOLTIP_LOGIN_ENCRYPTION_KEY\"\n          >\n            <span class=\"iconfont icon-info\" />\n          </span>\n        </label>\n        <div v-if=\"dirty.key && !!errors.key\" class=\"error mb-2\">\n          {{ errors.key }}\n        </div>\n        <input\n          id=\"password\"\n          v-model.trim=\"key\"\n          type=\"password\"\n          autocorrect=\"off\"\n          autocapitalize=\"none\"\n          autocomplete=\"current-password\"\n          class=\"form-control input-lg input-block mb-2\"\n          :class=\"{ 'mb-4': !error }\"\n          @blur=\"handleBlur('key')\"\n        />\n        <div v-if=\"!!error\" class=\"error mb-4\">{{ error }}</div>\n        <button\n          :disabled=\"submitDisabled || isLoading\"\n          type=\"submit\"\n          class=\"btn btn-large btn-blue input-block mb-2\"\n        >\n          Log in\n        </button>\n        <router-link\n          :to=\"{ name: 'import', query: { redirect, authority } }\"\n          class=\"btn btn-large input-block text-center mb-2\"\n        >\n          Import account\n        </router-link>\n      </form>\n    </div>\n    <Footer />\n  </Center>\n</template>\n\n<script>\nimport { mapActions } from 'vuex';\nimport triplesec from 'triplesec';\nimport { getKeychain } from '@/helpers/keychain';\nimport { jsonParse } from '@/helpers/utils';\nimport { getAuthority } from '@/helpers/auth';\nimport {\n  ERROR_INVALID_CREDENTIALS,\n  ERROR_INVALID_ENCRYPTION_KEY,\n  TOOLTIP_LOGIN_ENCRYPTION_KEY,\n} from '@/helpers/messages.json';\n\nexport default {\n  data() {\n    return {\n      keychain: {},\n      dirty: {\n        username: false,\n        key: false,\n      },\n      error: '',\n      isLoading: false,\n      redirect: this.$route.query.redirect,\n      authority: getAuthority(this.$route.query.authority),\n      TOOLTIP_LOGIN_ENCRYPTION_KEY,\n    };\n  },\n  computed: {\n    username: {\n      get() {\n        return this.$store.state.persistentForms.login.username;\n      },\n      set(value) {\n        this.$store.commit('saveLoginUsername', value);\n      },\n    },\n    key: {\n      get() {\n        return this.$store.state.persistentForms.login.key;\n      },\n      set(value) {\n        this.$store.commit('saveLoginKey', value);\n      },\n    },\n    submitDisabled() {\n      return !!this.errors.username || !!this.errors.key;\n    },\n    errors() {\n      const current = {};\n      const { username, key } = this;\n\n      if (!username) {\n        current.username = 'Username is required.';\n      }\n\n      if (!key) {\n        current.key = 'Keychain password is required.';\n      }\n\n      return current;\n    },\n  },\n  created() {\n    this.loadKeychain();\n  },\n  methods: {\n    ...mapActions(['login']),\n    resetForm() {\n      this.dirty = {\n        username: false,\n        key: false,\n      };\n      this.username = '';\n      this.key = '';\n    },\n    loadKeychain() {\n      this.keychain = getKeychain();\n      const usernames = Object.keys(this.keychain);\n      if (usernames.length > 0) {\n        [this.username] = usernames;\n      }\n    },\n    handleBlur(name) {\n      this.dirty[name] = true;\n    },\n    submitForm() {\n      const { authority } = this;\n      const encryptedKeys = this.keychain[this.username];\n      this.isLoading = true;\n\n      triplesec.decrypt(\n        {\n          data: new triplesec.Buffer(encryptedKeys, 'hex'),\n          key: new triplesec.Buffer(this.key),\n        },\n        (decryptError, buff) => {\n          if (decryptError) {\n            this.isLoading = false;\n            this.error = ERROR_INVALID_ENCRYPTION_KEY;\n\n            console.log('err', decryptError);\n            return;\n          }\n\n          const keys = jsonParse(buff.toString());\n          if (authority && !keys[authority]) {\n            this.isLoading = false;\n            this.error = `You need to import your account using your password or ${authority} key to do this request. Click \"Import account\" button to proceed.`;\n            return;\n          }\n\n          this.login({ username: this.username, keys })\n            .then(() => {\n              const { redirect } = this.$route.query;\n              this.$router.push(redirect || '/');\n              this.isLoading = false;\n              this.error = '';\n\n              this.resetForm();\n            })\n            .catch(err => {\n              console.log('Login failed', err);\n              this.isLoading = false;\n              this.error = ERROR_INVALID_CREDENTIALS;\n            });\n        },\n      );\n    },\n  },\n};\n</script>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Login.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Login.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Login.vue?vue&type=template&id=140a321a&\"\nimport script from \"./Login.vue?vue&type=script&lang=js&\"\nexport * from \"./Login.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}